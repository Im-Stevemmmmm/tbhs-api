generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Player {
    uuid String @id
    rank String @default("noob")

    PitData PitData?
}

model PitData {
    playerUuid            String @id
    offensiveStatsId      Int
    defensiveStatsId      Int
    performanceStatsId    Int
    perksAndMysticStatsId Int
    miscellaneousStatsId  Int
    farmingStatsId        Int
    prestigeStatsId       Int

    player             Player              @relation(fields: [playerUuid], references: [uuid])
    offensiveStats     OffensiveStats      @relation(fields: [offensiveStatsId], references: [id])
    defensiveStats     DefensiveStats      @relation(fields: [defensiveStatsId], references: [id])
    performanceStats   PerformanceStats    @relation(fields: [performanceStatsId], references: [id])
    perkAndMysticStats PerksAndMysticStats @relation(fields: [perksAndMysticStatsId], references: [id])
    miscellaneousStats MiscellaneousStats  @relation(fields: [miscellaneousStatsId], references: [id])
    farmingStats       FarmingStats        @relation(fields: [farmingStatsId], references: [id])
    prestigeStats      PrestigeStats       @relation(fields: [prestigeStatsId], references: [id])
}

model OffensiveStats {
    id               Int   @id @default(autoincrement())
    kills            Int
    assists          Int
    swordHits        Int
    arrowsShot       Int
    arrowsHit        Int
    damageDealt      Float
    meleeDamageDealt Float
    bowDamageDealt   Float
    highestStreak    Int

    PitData PitData?
}

model DefensiveStats {
    id               Int   @id @default(autoincrement())
    deaths           Int
    damageTaken      Float
    meleeDamageTaken Float
    bowDamageTaken   Float

    PitData PitData?
}

model PerformanceStats {
    id                        Int   @id @default(autoincrement())
    xp                        Float
    xpPerHour                 Float
    goldEarned                Float
    goldPerHour               Float
    killDeathRatio            Float
    killDeathPlusAssistRatio  Float
    killsAndAssistsPerHour    Float
    damageDealtOverTakenRatio Float
    bowAccuracy               Float
    contractsStarted          Int
    contractsCompleted        Int

    PitData PitData?
}

model PerksAndMysticStats {
    id                        Int @id @default(autoincrement())
    goldenApplesEaten         Int
    goldenHeadsEaten          Int
    lavaBucketsEmptied        Int
    fishingRodsLaunched       Int
    soupsDrank                Int
    tierOneMysticsEnchanted   Int
    tierTwoMysticsEnchanted   Int
    tierThreeMysticsEnchanted Int
    darkPantsEnchanted        Int

    PitData PitData?
}

model MiscellaneousStats {
    id                    Int   @id @default(autoincrement())
    playtime              Float
    leftClicks            Int
    diamondItemsPurchased Int
    chatMessages          Int
    blocksPlaced          Int
    blocksBroken          Int
    jumpsIntoPit          Int
    launcherLaunches      Int
    dailyTradeLimits      Int
    goldTradeLimits       Int
    genisisPoints         Int

    PitData PitData?
}

model FarmingStats {
    id                   Int @id @default(autoincrement())
    wheatFarmed          Int
    fishedAnything       Int
    fishedFish           Int
    fishSold             Int
    hayBalesSold         Int
    kingsQuestCompleted  Int
    sewerTreasuresFound  Int
    nightQuestsCompleted Int

    PitData PitData?
}

model PrestigeStats {
    id                   Int @id @default(autoincrement())
    prestige             Int
    currentRenown        Int
    lifetimeRenown       Int
    renownShopCompletion Int

    PitData PitData?
}
